{"version":3,"sources":["components/Figure.js","components/Header.js","helpers/helpers.js","components/Popup.js","components/Notification.js","components/Word.js","components/WrongLetters.js","App.js","index.js"],"names":["Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","Header","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","split","forEach","letter","includes","Popup","correctLetters","selectedWord","setPlayable","playAgain","finalMessage","revealWord","playable","useEffect","style","display","onClick","Notification","Word","map","i","WrongLetters","reduce","prev","curr","App","words","Math","floor","random","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","e","key","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.079c6f26.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Figure = ({wrongLetters}) => {\r\n    const errors = wrongLetters.length;\r\n\r\n    return (\r\n        <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n        {/* <!-- Rod --> */}\r\n        <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n        <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n        <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n        <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n        {/* <!-- Head --> */}\r\n       {errors > 0 &&  <circle cx=\"140\" cy=\"70\" r=\"20\" />}\r\n        {/* <!-- Body --> */}\r\n        {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\"  /> }\r\n        {/* <!-- Arms --> */}\r\n        {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\"  />}\r\n      {errors > 3 &&  <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\"  />}\r\n        {/* <!-- Legs --> */}\r\n        {errors > 4 &&  <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\"  />}\r\n        {errors > 5 &&  <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\"  />}\r\n      </svg>\r\n    )\r\n}\r\n\r\nexport default Figure\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <h1>Hangman</h1>\r\n            <p>Find the Hidden Word --Enter a Letter </p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export function showNotification(setter) {\r\n    setter(true);\r\n    setTimeout(() => {\r\n        setter(false)\r\n    },2000)\r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {\r\nlet status = 'win'\r\nword.split('').forEach(letter => {\r\n    if(!correct.includes(letter)) {\r\n        status = ''\r\n    }\r\n})\r\nif (wrong.length === 6) status = 'lose'\r\nreturn status;\r\n}","import React, {useEffect} from 'react'\r\nimport {checkWin} from '../helpers/helpers'\r\n\r\nconst Popup = ({correctLetters, wrongLetters, selectedWord, setPlayable, playAgain}) => {\r\n    let finalMessage =''\r\n    let revealWord = ''\r\n    let playable = true\r\n\r\n    if(checkWin(correctLetters, wrongLetters, selectedWord) === 'win') {\r\n        finalMessage = 'Congratulations, You Win!!'\r\n        playable = false;\r\n    } else if (checkWin(correctLetters, wrongLetters, selectedWord) === 'lose' ) {\r\n        finalMessage = 'Unfortunately, You Lost';\r\n        revealWord = `... the word was ${selectedWord}`;\r\n        playable = false\r\n    }\r\n\r\nuseEffect(() => {\r\n    setPlayable(playable);\r\n})\r\n\r\n    return (\r\n        <div className=\"popup-container\" style= {finalMessage !== '' ? {display:'flex'} : {}}>\r\n      <div className=\"popup\">\r\n        <h2>{finalMessage}</h2>\r\n        <h3>{revealWord}</h3>\r\n        <button onClick={playAgain}>Play Again</button>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n","import React from 'react'\r\n\r\nconst Notification = ({showNotification}) => {\r\n    return (\r\n        <div className={`notification-container ${showNotification ? 'show' : ''}`}>\r\n        <p>You have already entered this letter</p>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nfunction Word({selectedWord, correctLetters}) {\r\n    return (\r\n        \r\n              <div className=\"word\">\r\n              {selectedWord.split('').map((letter, i) => {\r\n                  return (\r\n          <span className=\"letter\" key={i}>\r\n            {correctLetters.includes(letter) ? letter : ''}\r\n          </span>\r\n\t\t\t)\r\n                  })}\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Word\r\n","import React from 'react'\r\n\r\nconst WrongLetters = ({wrongLetters}) => {\r\n    return (\r\n        <div className=\"wrong-letters-container\">\r\n        <div>{wrongLetters.length > 0 && <p>Wrong</p>}\r\n    {wrongLetters.\r\n    map((letter,i) => <span key={i}>{letter}</span>)\r\n    .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)\r\n    }\r\n   \r\n    </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default WrongLetters\r\n","import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport Figure from './components/Figure';\nimport Header from './components/Header'\nimport Popup from './components/Popup';\nimport Notification from './components/Notification';\n\nimport Word from './components/Word';\nimport WrongLetters from './components/WrongLetters';\nimport {showNotification as show} from './helpers/helpers'\n\n\n\nfunction App() {\n\n  const words = ['application', 'programming', 'interface', 'wizard', 'computer', 'typescript', 'developer', 'javascript', 'redbull', 'node', 'software', 'design', 'technology'];\n\n  let selectedWord = words[Math.floor(Math.random() * words.length)];\n  \nconst [playable, setPlayable] = useState(true)\nconst [correctLetters, setCorrectLetters] = useState([])\nconst [wrongLetters, setWrongLetters] = useState([])\nconst [showNotification, setShowNotification] = useState(false)\n \nuseEffect(() => {\n  const handleKeydown = e => {\n    const { key, keyCode } = e;\n    \n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n  \n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n           show(setShowNotification)\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n  \n\n          } else {\n            show(setShowNotification)\n          }\n        }\n      }\n    }\n  \n  window.addEventListener('keydown', handleKeydown)\n  return () => {\n    window.removeEventListener('keydown', handleKeydown)\n  }\n}, [correctLetters, wrongLetters, playable])\n\nfunction playAgain(){\n  setPlayable(true)\nsetCorrectLetters([])\nsetWrongLetters([])\nconst random = Math.floor(Math.random() * words.length)\nselectedWord = words[random]\n}\n  return (\n    <>\n     <Header />\n     <div className='game-container'>\n    <Figure  wrongLetters = {wrongLetters}/>\n    <WrongLetters wrongLetters = {wrongLetters} />\n    <Word selectedWord= {selectedWord} correctLetters = {correctLetters}/>\n     </div>\n     <Popup selectedWord= {selectedWord} correctLetters = {correctLetters} wrongLetters = {wrongLetters} setPlayable={setPlayable} playAgain ={playAgain}/>\n    <Notification showNotification ={showNotification} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}